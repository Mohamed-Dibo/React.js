{"version":3,"sources":["components/Status.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Status","className","this","props","name","temp","humidity","pressure","description","error","Component","Form","onSubmit","getdata","type","placeholder","App","state","country","e","a","preventDefault","city","target","elements","value","url","fetch","res","json","data","setState","sys","main","weather","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAiBeA,E,4JAdb,WACE,OACE,sBAAKC,UAAU,SAAf,UACCC,KAAKC,MAAMC,MAAQ,8BAAG,0CAAoBF,KAAKC,MAAMC,KAAlC,OACnBF,KAAKC,MAAME,MAAQ,8BAAG,0CAAoBH,KAAKC,MAAME,KAAlC,OACnBH,KAAKC,MAAMG,UAAY,8BAAG,8CAAwBJ,KAAKC,MAAMG,SAAtC,OACvBJ,KAAKC,MAAMI,UAAY,8BAAG,8CAAwBL,KAAKC,MAAMI,SAAtC,OACvBL,KAAKC,MAAMK,aAAe,8BAAG,iDAA2BN,KAAKC,MAAMK,YAAzC,OAC1BN,KAAKC,MAAMM,OAAS,8BAAG,2CAAqBP,KAAKC,MAAMM,MAAnC,c,GATNC,aCYNC,E,4JAXb,WACE,OACE,uBAAMC,SAAUV,KAAKC,MAAMU,QAASZ,UAAU,OAA9C,UACE,uBAAOa,KAAK,OAAOV,KAAK,OAAOW,YAAY,YAC3C,uBAAOD,KAAK,OAAOV,KAAK,UAAUW,YAAY,aAC9C,wD,GANWL,aCoEJM,E,4MAjEbC,MAAQ,CACNb,KAAM,GACNc,QAAS,GACTb,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,YAAa,GACbC,MAAM,I,EAGPI,Q,uCAAU,WAAOM,GAAP,uBAAAC,EAAA,6DACTD,EAAEE,iBACEC,EAAOH,EAAEI,OAAOC,SAASF,KAAKG,MAC9BP,EAAUC,EAAEI,OAAOC,SAASN,QAAQO,MAC9B,mCACNC,EALK,4DAKsDJ,EALtD,cAKgEJ,EALhE,kBAIC,oCAJD,SAOOS,MAAMD,GAPb,cAOLE,EAPK,iBAQQA,EAAIC,OARZ,QAQLC,EARK,OASPR,GAAQJ,EACT,EAAKa,SAAS,CACb3B,KAAK0B,EAAK1B,KACVc,QAAQY,EAAKE,IAAId,QACjBb,KAAMyB,EAAKG,KAAK5B,KAChBC,SAASwB,EAAKG,KAAK3B,SACnBC,SAASuB,EAAKG,KAAK1B,SACnBC,YAAasB,EAAKI,QAAQ,GAAG1B,YAC7BC,MAAM,KAKR,EAAKsB,SAAS,CACZ3B,KAAK,GACLc,QAAQ,GACRb,KAAM,GACNC,SAAS,GACTC,SAAS,GACTC,YAAa,GACbC,MAAM,mBA7BC,4C,kGAoCX,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAMY,QAASX,KAAKW,UACpB,cAAC,EAAD,CACET,KAAMF,KAAKe,MAAMb,KACjBc,QAAShB,KAAKe,MAAMC,QACpBb,KAAOH,KAAKe,MAAMZ,KAClBC,SAAUJ,KAAKe,MAAMX,SACrBC,SAAUL,KAAKe,MAAMV,SACrBC,YAAaN,KAAKe,MAAMT,YACxBC,MAAOP,KAAKe,MAAMR,e,GA3DVC,aCQHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70046445.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nclass Status extends Component{\r\n  render(){\r\n    return (\r\n      <div className=\"Status\">\r\n      {this.props.name && <p><span>name :</span>{this.props.name } </p>}\r\n      {this.props.temp && <p><span>temp :</span>{this.props.temp } </p>}\r\n      {this.props.humidity && <p><span>humidity :</span>{this.props.humidity } </p>}\r\n      {this.props.pressure && <p><span>pressure :</span>{this.props.pressure } </p>}\r\n      {this.props.description && <p><span>description :</span>{this.props.description } </p>}\r\n      {this.props.error && <p><span>error :</span>{this.props.error } </p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Status;\r\n","import React,{Component} from 'react';\r\n\r\nclass Form extends Component{\r\n  render(){\r\n    return (\r\n      <form onSubmit={this.props.getdata} className=\"Form\">\r\n        <input type=\"text\" name=\"city\" placeholder=\"city...\"/>\r\n        <input type=\"text\" name=\"country\" placeholder=\"Egypt...\" />\r\n        <button>Get Weather</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\nimport Status from \"./components/Status\";\nimport Form from \"./components/Form\";\n\nclass App extends Component {\n  state = {\n    name: \"\",\n    country: \"\",\n    temp: \"\",\n    humidity: \"\",\n    pressure: \"\",\n    description: \"\",\n    error:\"\"\n  };\n\n   getdata = async (e)=> {\n    e.preventDefault();\n    let city = e.target.elements.city.value;\n    let country = e.target.elements.country.value;\n    let key = \"0e7a433e680b124748151e219bb3245e\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}%2C${country}&appid=${key}`;\n\n    let res = await fetch(url);\n    let data = await res.json();\n   if(city && country){\n     this.setState({\n      name:data.name,\n      country:data.sys.country,\n      temp: data.main.temp,\n      humidity:data.main.humidity,\n      pressure:data.main.pressure,\n      description: data.weather[0].description,\n      error:\"\"\n     })\n   }\n   else\n   {\n    this.setState({\n      name:'',\n      country:'',\n      temp: '',\n      humidity:'',\n      pressure:'',\n      description: '',\n      error:\"city not found\"\n     })\n     \n   }\n    \n     \n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>Weather Today</h3>\n        <Form getdata={this.getdata} />\n        <Status \n          name={this.state.name}\n          country={this.state.country}\n          temp= {this.state.temp}\n          humidity={this.state.humidity}\n          pressure={this.state.pressure}\n          description={this.state.description}\n          error={this.state.error}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}